<html>
  <head>
    <title>Particle Volume Distribution Analyzer</title>
    <HTA:APPLICATION
      ID="ParticleApp"
      BORDER="thick"
      CAPTION="yes"
      SINGLEINSTANCE="yes"
      SCROLL="no"
      SYSMENU="yes"
    />
    <script language="VBScript">
      Option Explicit

      ' Percentile helper: linear interpolation on sorted array
      Function Percentile(arr, p)
        Dim k, c, f
        k = (UBound(arr)) * p
        c = Int(k)
        f = k - c
        If c < UBound(arr) Then
          Percentile = arr(c) + f * (arr(c+1) - arr(c))
        Else
          Percentile = arr(UBound(arr))
        End If
      End Function

      Sub RunAnalysis()
        Dim fso, FilePath
        Set fso = CreateObject("Scripting.FileSystemObject")

        ' --- get and clean file path ---
        FilePath = document.getElementById("filepath").value
        If Left(FilePath,1) = """" Then FilePath = Mid(FilePath,2)
        If Right(FilePath,1) = """" Then FilePath = Left(FilePath, Len(FilePath)-1)

        ' --- HS circularity bounds fixed ---
        Dim HSCircLowerBound, HSCircUpperBound
        HSCircLowerBound = 0
        HSCircUpperBound = 1

        If Not fso.FileExists(FilePath) Then
          MsgBox "Data file not found:" & vbCrLf & FilePath, vbExclamation
          Exit Sub
        End If

        ' --- read raw data and compute vectors ---
        Dim rawF, header, fields, i
        Set rawF = fso.OpenTextFile(FilePath, 1)
        header = rawF.ReadLine
        fields = Split(header, vbTab)

        Dim idxIndex, idxDiameter, idxCircularity
        For i = 0 To UBound(fields)
          Select Case fields(i)
            Case "Index": idxIndex = i
            Case "Diameter": idxDiameter = i
            Case "Circularity": idxCircularity = i
          End Select
        Next

        Dim IndexV(), DiamV(), CircV(), SEVolV(), HSCircV()
        Dim cnt: cnt = 0
        Dim parts
        Do Until rawF.AtEndOfStream
          parts = Split(rawF.ReadLine, vbTab)
          If IsArray(parts) Then
            If UBound(parts) >= idxCircularity Then
              Dim lab
              lab = parts(idxIndex)
              If lab <> "Mean" And lab <> "StDev" And lab <> "Median" Then
                ReDim Preserve IndexV(cnt)
                ReDim Preserve DiamV(cnt)
                ReDim Preserve CircV(cnt)
                ReDim Preserve SEVolV(cnt)
                ReDim Preserve HSCircV(cnt)

                IndexV(cnt) = CDbl(parts(idxIndex))
                DiamV(cnt) = CDbl(parts(idxDiameter))
                CircV(cnt) = CDbl(parts(idxCircularity))
                SEVolV(cnt) = (1/6) * 3.141592653589793 * (DiamV(cnt)^3)
                HSCircV(cnt) = Round(CircV(cnt)^2, 2)
                cnt = cnt + 1
              End If
            End If
          End If
        Loop
        rawF.Close

        ' --- filter by HS circularity ---
        Dim fIdx(), fDiam(), fSEVol(), fHSCirc(), nFilt
        nFilt = 0
        For i = 0 To UBound(HSCircV)
          If HSCircV(i) >= HSCircLowerBound And HSCircV(i) <= HSCircUpperBound Then
            ReDim Preserve fIdx(nFilt)
            ReDim Preserve fDiam(nFilt)
            ReDim Preserve fSEVol(nFilt)
            ReDim Preserve fHSCirc(nFilt)
            fIdx(nFilt) = IndexV(i)
            fDiam(nFilt) = DiamV(i)
            fSEVol(nFilt) = SEVolV(i)
            fHSCirc(nFilt) = HSCircV(i)
            nFilt = nFilt + 1
          End If
        Next

        ' --- build 1001-bin log histogram ---
        Const bins = 1001
        Dim hx(), hy()
        ReDim hx(bins-1)
        ReDim hy(bins-1)
        For i = 0 To bins-1
          hx(i) = 10 ^ (-1 + 0.004301 * i)
          hy(i) = 0
        Next

        ' --- fill histogram ---
        Dim dval, j
        For j = 0 To nFilt - 1
          dval = fDiam(j)
          For i = 1 To bins - 1
            If dval > hx(i-1) And dval <= hx(i) Then
              hy(i) = hy(i) + 1
              Exit For
            End If
          Next
        Next

        ' --- cumulative percent ---
        Dim cumY(), cumPct()
        ReDim cumY(bins-1)
        ReDim cumPct(bins-1)
        cumY(0) = hy(0)
        For i = 1 To bins-1
          cumY(i) = cumY(i-1) + hy(i)
        Next
        For i = 0 To bins-1
          cumPct(i) = cumY(i) * 100 / cumY(bins-1)
        Next

        ' --- q-histogram and normalize ---
        Dim qh(), qn(), totQ
        ReDim qh(bins-1)
        qh(0) = cumPct(0)
        totQ = qh(0)
        For i = 1 To bins-1
          qh(i) = (cumPct(i) - cumPct(i-1)) / (Log(hx(i)/hx(i-1)))
          totQ = totQ + qh(i)
        Next
        ReDim qn(bins-1)
        For i = 0 To bins-1
          qn(i) = qh(i) * 100 / totQ
        Next

        ' --- volume-weighted histogram ---
        Dim vhist(), vnorm(), totV
        ReDim vhist(bins-1)
        totV = 0
        For i = 0 To bins-1
          vhist(i) = qn(i) * (hx(i)^3)
          totV = totV + vhist(i)
        Next
        ReDim vnorm(bins-1)
        For i = 0 To bins-1
          vnorm(i) = vhist(i) * 100 / totV
        Next

        ' --- smooth (11-point MA) ---
        Dim smooth(), sumTmp
        ReDim smooth(bins-1)
        For i = 0 To bins-1
          If i < 5 Or i > bins-6 Then
            smooth(i) = vnorm(i)
          Else
            sumTmp = 0
            For j = i-5 To i+5
              sumTmp = sumTmp + vnorm(j)
            Next
            smooth(i) = sumTmp / 11
          End If
        Next

        ' --- write histogram file ---
        Dim outHist
        Set outHist = fso.CreateTextFile(Replace(FilePath, ".txt", "_Filtered_histogram.txt"), True, True)
        For i = 0 To bins-1
          outHist.WriteLine hx(i) & vbTab & smooth(i)
        Next
        outHist.Close

        ' --- calculate D[4,3] & D[3,2] ---
        Dim sumSE2, sum432, sum322, D432, D322
        sumSE2 = 0: sum432 = 0: sum322 = 0
        For i = 0 To nFilt - 1
          sumSE2 = sumSE2 + fSEVol(i)
          sum432 = sum432 + fSEVol(i) * fDiam(i)
          sum322 = sum322 + fSEVol(i) / fDiam(i)
        Next
        D432 = sum432 / sumSE2
        D322 = sumSE2 / sum322

        ' --- cumulative vol percent for interpolation ---
        Dim cumV2()
        ReDim cumV2(bins-1)
        cumV2(0) = smooth(0)
        For i = 1 To bins-1
          cumV2(i) = cumV2(i-1) + smooth(i)
        Next

        ' --- interpolate D[v,p] at 10%,50%,90%,99% ---
        Dim thresholds(3), labels(3), DvList(3), boundsX(1), boundsY(1), Z2
        thresholds(0)=10: thresholds(1)=50: thresholds(2)=90: thresholds(3)=99
        labels(0)="0.1": labels(1)="0.5": labels(2)="0.9": labels(3)="0.99"
        For j = 0 To 3
          For i = 0 To bins-2
            If cumV2(i) <= thresholds(j) And cumV2(i+1) >= thresholds(j) Then
              boundsX(0)=hx(i): boundsX(1)=hx(i+1)
              boundsY(0)=cumV2(i): boundsY(1)=cumV2(i+1)
              Exit For
            End If
          Next
          Z2 = Log(boundsX(0))/Log(10) + ((Log(boundsX(1))/Log(10)-Log(boundsX(0))/Log(10)) * ((thresholds(j)-boundsY(0))/(boundsY(1)-boundsY(0))))
          DvList(j) = 10^Z2
        Next

        ' --- write parameters file ---
        Dim outPar
        Set outPar = fso.CreateTextFile(Replace(FilePath, ".txt", "_CalculatedParameters.txt"), True, True)
        outPar.WriteLine "D[4,3]" & vbTab & D432
        outPar.WriteLine "D[3,2]" & vbTab & D322
        For j = 0 To 3
          outPar.WriteLine "D[v," & labels(j) & "]" & vbTab & DvList(j)
        Next
        outPar.Close


                ' --- write number-based cumulative distribution ---
        Dim outNum
        Set outNum = fso.CreateTextFile(Replace(FilePath, ".txt", "_NumberCumulative.txt"), True, True)
        For i = 0 To bins-1
          outNum.WriteLine hx(i) & vbTab & cumY(i)
        Next
        outNum.Close

        ' --- write number-based histogram (counts per bin) ---
        Dim outNumHist
        Set outNumHist = fso.CreateTextFile(Replace(FilePath, ".txt", "_Number_histogram.txt"), True, True)
        For i = 0 To bins-1
          outNumHist.WriteLine hx(i) & vbTab & hy(i)
        Next
        outNumHist.Close



        ' --- summary statistics ---
        Dim sortedDiam()
        Dim a, b, tmp
        Dim sumD, sumSq, meanDiam, stdDevDiam
        Dim p10, p50, p90, p99
        Dim outSum
        ReDim sortedDiam(nFilt-1)
        For i = 0 To nFilt-1: sortedDiam(i) = fDiam(i): Next
        For a = 0 To nFilt-2
          For b = a+1 To nFilt-1
            If sortedDiam(a) > sortedDiam(b) Then
              tmp = sortedDiam(a)
              sortedDiam(a) = sortedDiam(b)
              sortedDiam(b) = tmp
            End If
          Next
        Next
        sumD = 0: sumSq = 0
        For i = 0 To nFilt-1: sumD = sumD + sortedDiam(i): Next
        meanDiam = sumD / nFilt
        For i = 0 To nFilt-1: sumSq = sumSq + (sortedDiam(i) - meanDiam)^2: Next
        If nFilt > 1 Then stdDevDiam = Sqr(sumSq/(nFilt-1)) Else stdDevDiam = 0
        p10 = Percentile(sortedDiam, 0.1)
        p50 = Percentile(sortedDiam, 0.5)
        p90 = Percentile(sortedDiam, 0.9)
        p99 = Percentile(sortedDiam, 0.99)

        Set outSum = fso.CreateTextFile(Replace(FilePath, ".txt", "_Summary.txt"), True, True)
        outSum.WriteLine "TotalParticles" & vbTab & nFilt
        outSum.WriteLine "MeanDiameter" & vbTab & meanDiam
        outSum.WriteLine "StdDevDiameter" & vbTab & stdDevDiam
        outSum.WriteLine "Diameter10thPercentile" & vbTab & p10
        outSum.WriteLine "Diameter50thPercentile" & vbTab & p50
        outSum.WriteLine "Diameter90thPercentile" & vbTab & p90
        outSum.WriteLine "Diameter99thPercentile" & vbTab & p99
        outSum.Close

        MsgBox "Analysis complete!" & vbCrLf & _
               Replace(FilePath,".txt","_CalculatedParameters.txt") & vbCrLf & _
               Replace(FilePath,".txt","_Filtered_histogram.txt") & vbCrLf & _
               Replace(FilePath,".txt","_NumberCumulative.txt") & vbCrLf & _
               Replace(FilePath,".txt","_Number_histogram.txt") & vbCrLf & _
               Replace(FilePath,".txt","_Summary.txt"), vbInformation

      End Sub
    </script>
  </head>
  <body style="font-family: Segoe UI; padding: 20px; background: #f8f8f8">
    <h2>Particle Volume Distribution Analyzer</h2>
    <div>
      <label for="filepath">Data File (.txt):</label><br />
      <input
        id="filepath"
        type="text"
        size="60"
        value="TotalParticlestats1.txt"
      /><br /><br />
      <button
        onclick="RunAnalysis()"
        style="font-size: 16pt; padding: 12px 24px"
      >
        Generate
      </button>
    </div>
  </body>
</html>
